
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage

class Message():

    FATAL = 0
    ERROR = 1
    INFO = 2
    WARNING = 3

    def Close(self):
        self.window.destroy()

    def start_move(self, event):
        self.x = event.x
        self.y = event.y

    def stop_move(self, event):
        self.x = None
        self.y = None

    def do_move(self, event):
        deltax = event.x - self.x
        deltay = event.y - self.y
        x = self.window.winfo_x() + deltax
        y = self.window.winfo_y() + deltay
        self.window.geometry(f"+{x}+{y}")

    def __init__(self, type_m, title, mess = "Generic", x = "", y = "", t = 50000):
        self.window = Tk()

        color = "#E3B336"
        frame = "frame3"

        if (type_m == Message.FATAL):
            color = "#791515"
            frame = "frame1"

        elif (type_m == Message.ERROR):
            color = "#BE2222"
            frame = "frame0"

        elif (type_m == Message.INFO):
            color = "#22A2BE"
            frame = "frame2"

        self.window.geometry("512x175")
        self.window.configure(bg = color)
        self.window.overrideredirect(True)

        self.w = 1024/2
        self.h = 350/2
        if(x == "" or y == ""):
            ws = self.window.winfo_screenwidth()
            hs = self.window.winfo_screenheight()
            x = (ws/2) - (self.w/2)
            y = (hs/2) - (self.h/2)
        else:
            x = (x) - (self.w/2)
            y = (y) - (self.h/2)

        print(self.w, self.h, x, y)
        self.window.geometry('%dx%d+%d+%d' % (self.w, self.h, x, y))

        self.window.bind("<ButtonPress-1>", self.start_move)
        self.window.bind("<ButtonRelease-1>", self.stop_move)
        self.window.bind("<B1-Motion>", self.do_move)


        canvas = Canvas(
        self.window,
        bg = color,
        height = 175,
        width = 512,
        bd = 0,
        highlightthickness = 0,
        relief = "ridge"
        )

        canvas.place(x = 0, y = 0)
        image_image_1 = PhotoImage(file=f"search/infomessage/assets/{frame}/image_1.png")
        image_1 = canvas.create_image(
        72.0,
        88.0,
        image=image_image_1
        )

        canvas.create_text(
        152.0,
        47.0,
        anchor="nw",
        text = title,
        fill="#FCFCFC",
        font=("Poppins ExtraBold", 26 * -1)
        )

        canvas.create_rectangle(
        158.0,
        88.0,
        218.0,
        93.0,
        fill="#FCFCFC",
        outline="")

        print(f"{title} - {mess}")

        canvas.create_text(
        158.0,
        100.0,
        anchor="nw",
        text = mess,
        fill = "#FCFCFC",
        font = ("Poppins Regular", 16 * -1)
        )
        image_image_2 = PhotoImage(file=f"search/infomessage/assets/{frame}/image_2.png")


        button_1 = Button(
        image=image_image_2,
        borderwidth=0,
        highlightthickness=0,
        command=self.Close,
        relief="flat"
        )
        button_1.place(
            x=485.0,
            y=5
        )

        self.window.resizable(False, False)
        self.window.after(t,lambda:self.window.destroy())
        self.window.mainloop()